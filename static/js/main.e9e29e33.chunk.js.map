{"version":3,"sources":["panels/Install.js","App.js","index.js"],"names":["Install","_ref","id","installApp","fetchedUser","parsedUrl","URL","window","location","href","vkgroupid","searchParams","get","e","console","log","connect","send","react_default","a","createElement","dist_vkui","isWebView","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","App","state","activePanel","history","goBack","Object","toConsumableArray","_this","pop","length","vkuiConnect","setState","goForward","push","onSwipeBack","this","panels_Install","go","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8OAkFeA,EA1EC,SAAAC,GAAqCA,EAAlCC,GAAkC,IAA9BC,EAA8BF,EAA9BE,WAAYC,EAAkBH,EAAlBG,YAI3BC,EAAY,IAAIC,IAAIC,OAAOC,SAASC,MAIpCC,GADUL,EAAUM,aAAaC,IAAI,aACzBP,EAAUM,aAAaC,IAAI,gBAW3C,OAPAT,EAAa,SAACU,GACfC,QAAQC,IAAI,wCAAWF,GAEdG,IAAQC,KAAK,yBAA0B,KAKnDC,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBC,WAAW,GAC3BJ,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACAH,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOnB,GAAG,QACRgB,EAAAC,EAAAC,cAACC,EAAA,YAAD,gHACCjB,GACDc,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,MAAM,mKACZL,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACCG,OAAQpB,EAAYqB,UAAYP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQK,IAAKtB,EAAYqB,YAAe,KACxEE,YAAavB,EAAYwB,MAAQxB,EAAYwB,KAAKL,MAAQnB,EAAYwB,KAAKL,MAAQ,IAFpF,GAAAM,OAIKzB,EAAY0B,WAJjB,KAAAD,OAI+BzB,EAAY2B,aAIrCrB,GACPQ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,MAAM,2IACZL,EAAAC,EAAAC,cAACC,EAAA,SAAD,QAAAQ,OAEKnB,EAFL,OAMmB,MAAbA,GACPQ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,MAAM,4BACZL,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQW,KAAK,KAAKC,MAAM,IAAIC,QAAS/B,EAAYgC,UAAQ,UAAzD,0ICCWC,6MA3CbC,MAAQ,CACNC,YAAa,OACbC,QAAS,CAAC,WAGZC,OAAS,WACP,IAAMD,EAAOE,OAAAC,EAAA,EAAAD,CAAOE,EAAKN,MAAME,SAC/BA,EAAQK,MACR,IAAMN,EAAcC,EAAQA,EAAQM,OAAS,GACzB,SAAhBP,GACFQ,IAAY7B,KAAK,4BAEnB0B,EAAKI,SAAS,CAAER,UAASD,mBAG3BU,UAAY,SAACV,GACX,IAAMC,EAAOE,OAAAC,EAAA,EAAAD,CAAOE,EAAKN,MAAME,SAC/BA,EAAQU,KAAKX,GACkB,SAA3BK,EAAKN,MAAMC,aACbQ,IAAY7B,KAAK,2BAEnB0B,EAAKI,SAAS,CAAER,UAASD,yFAIzB,OACIpB,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBC,WAAW,GAC1BJ,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACG6B,YAAaC,KAAKX,OAClBD,QAASY,KAAKd,MAAME,QACpBD,YAAaa,KAAKd,MAAMC,aAGxBpB,EAAAC,EAAAC,cAACgC,EAAD,CAASlD,GAAG,OAAOE,YAAa+C,KAAKd,MAAMjC,YAAaiD,GAAIF,KAAKE,KACjEnC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOnB,GAAG,YACVgB,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOnB,GAAG,uBArCJoD,IAAMC,WCAxBvC,IAAQC,KAAK,eAAgB,IAQ7BuC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e9e29e33.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from '@vkontakte/vkui-connect';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, ConfigProvider, View } from '@vkontakte/vkui';\n\n\n\n\nconst Install = ({ id, installApp, fetchedUser }) => {\n    \n\t\n    // console.log('location.href', window.location.href);\n    var parsedUrl = new URL(window.location.href);\n    // console.log(parsedUrl);\n    // console.log(parsedUrl.searchParams.get(\"vk_app_id\"));\n    let vkappid = parsedUrl.searchParams.get(\"vk_app_id\");\n    let vkgroupid = parsedUrl.searchParams.get(\"vk_group_id\");\n    // console.log(vkgroupid);\n    // console.log(obj)\n\n    installApp = (e) => {\n\t\t\tconsole.log('Тут Апп', e )\n            // window.open(`https://vk.com/add_community_app?aid=${vkappid}`);\n            connect.send(\"VKWebAppAddToCommunity\", {});\n\t\t\n\t};\n\n    return(\n<ConfigProvider isWebView={true}>\n<View>\n<Panel id='home'>\n\t\t<PanelHeader>Магнит Подписчиков</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"Добро Пожаловать в Приложение\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n        </Group>}\n\n        {vkgroupid &&\n\t\t<Group title=\"Приложение стоит в группе\">\n\t\t\t<ListItem>\n                \n\t\t\t\t{`${vkgroupid} `}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n        {vkgroupid == null &&\n\t\t<Group title=\"Меню\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={installApp} data-to=\"persik\">\n\t\t\t\t\tУстановить в Сообщество\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>}\n\t</Panel>\n\n</View>\n</ConfigProvider>\n\t\n\n\n\n\n)};\n\nInstall.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Install;\n","import React from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport { View, Panel, ConfigProvider,  PanelHeader, Group, List, Cell, HeaderButton  } from '@vkontakte/vkui';\nimport vkuiConnect from '@vkontakte/vkui-connect';\n\nimport Install from './panels/Install';\n\nclass App extends React.Component {\n\n  state = {\n    activePanel: 'home',\n    history: ['home']\n  }\n  \n  goBack = () => {\n    const history = [...this.state.history];\n    history.pop();\n    const activePanel = history[history.length - 1];\n    if (activePanel === 'home') {\n      vkuiConnect.send('VKWebAppDisableSwipeBack');\n    }\n    this.setState({ history, activePanel });\n  }\n  \n  goForward = (activePanel) => {\n    const history = [...this.state.history];\n    history.push(activePanel);\n    if (this.state.activePanel === 'home') {\n      vkuiConnect.send('VKWebAppEnableSwipeBack');\n    }\n    this.setState({ history, activePanel });\n  }\n\n  render () {\n    return (\n        <ConfigProvider isWebView={true}>\n         <View \n            onSwipeBack={this.goBack} \n            history={this.state.history} \n            activePanel={this.state.activePanel}\n            >\n\n            <Install id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n            <Panel id=\"profile\"/>\n            <Panel id=\"education\"/>\n          \n        </View>\n        </ConfigProvider>\n      );\n  }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}